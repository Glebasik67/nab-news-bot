
import os
import asyncio
import requests
from bs4 import BeautifulSoup
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher(bot)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π —Å NBA.com
def get_nba_news():
    url = "https://www.nba.com/news"
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "lxml")
    articles = soup.find_all("a", class_="ArticleTile_articleTitle__1ikvN")  # –ö–ª–∞—Å—Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    if articles:
        latest_news = articles[0].text.strip()
        news_url = "https://www.nba.com" + articles[0]["href"]
        return latest_news, news_url
    return None, None

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
async def news_checker():
    last_news = None
    while True:
        news_title, news_url = get_nba_news()
        if news_title and news_title != last_news:
            last_news = news_title
            await bot.send_message(chat_id=os.getenv("YOUR_TELEGRAM_CHAT_ID"),
                                   text=f"üì¢ –ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å NBA:\n{news_title}\nüîó {news_url}")
        await asyncio.sleep(300)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ NBA!")

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(news_checker())  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π
    executor.start_polling(dp, skip_updates=True)
